[{"D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\index.js":"1","D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\App.js":"2","D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\components\\button\\Button.js":"3","D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\components\\buttons\\Buttons.js":"4"},{"size":471,"mtime":1610949488585,"results":"5","hashOfConfig":"6"},{"size":177,"mtime":1611035405543,"results":"7","hashOfConfig":"6"},{"size":6509,"mtime":1611123655479,"results":"8","hashOfConfig":"6"},{"size":7577,"mtime":1611133665224,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vatgoe",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\index.js",[],["21","22"],"D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\App.js",[],"D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\components\\button\\Button.js",[],["23","24"],"D:\\developpeurWeb\\devChallenge\\reusable-button-react-challenge\\src\\components\\buttons\\Buttons.js",["25"],"import Prism from 'prismjs';\r\nimport Highlight, { defaultProps } from 'prism-react-renderer';\r\nimport Button from '../button/Button';\r\n\r\nconst exampleCode = `\r\n<Button clickHandler={clickHandler}>Button</Button>\r\n`.trim();\r\n\r\nconst Buttons = () => {\r\n    const clickHandler = () => {\r\n        console.log('click');\r\n    };\r\n\r\n    const alertPriya = () => {\r\n        window.alert('ATTENTION !!!!! Priya la caca');\r\n    };\r\n\r\n    // const icon = <FontAwesomeIcon icon=\"cart-arrow-down\" />;\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Buttons</h1>\r\n            <div>\r\n                <div className=\"btnType\">Default:</div>\r\n                <Button clickHandler={clickHandler}>Button</Button>\r\n                <Highlight {...defaultProps} code={exampleCode} language=\"jsx\">\r\n                    {({\r\n                        className,\r\n                        style,\r\n                        tokens,\r\n                        getLineProps,\r\n                        getTokenProps,\r\n                    }) => (\r\n                        <pre className={className} style={style}>\r\n                            {tokens.map((line, i) => (\r\n                                <div {...getLineProps({ line, key: i })}>\r\n                                    {line.map((token, key) => (\r\n                                        <span\r\n                                            {...getTokenProps({ token, key })}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </pre>\r\n                    )}\r\n                </Highlight>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Outline:</div>\r\n                <div className=\"flexRow\">\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        color=\"default\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Outline\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        color=\"primary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Outline\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        color=\"secondary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Outline\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        color=\"danger\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Outline\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Text only:</div>\r\n                <div className=\"flexRow\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"default\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Text\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"primary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Text\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"secondary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Text\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"danger\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Text\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">No shadow:</div>\r\n\r\n                <Button clickHandler={clickHandler} disableShadow>\r\n                    No Shadow\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Disabled:</div>\r\n                <Button clickHandler={clickHandler} disabled>\r\n                    Disabled\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">With icon:</div>\r\n                <div className=\"flexRow\">\r\n                    <Button\r\n                        startIcon=\"cart-arrow-down\"\r\n                        color=\"primary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Start Icon\r\n                    </Button>\r\n                    <Button\r\n                        endIcon=\"cart-arrow-down\"\r\n                        color=\"primary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        End Icon\r\n                    </Button>\r\n                    <Button\r\n                        startIcon=\"cart-arrow-down\"\r\n                        endIcon=\"cart-arrow-down\"\r\n                        color=\"primary\"\r\n                        clickHandler={clickHandler}\r\n                    >\r\n                        Start & End Icon\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Size:</div>\r\n                <div className=\"flexRow\">\r\n                    <Button\r\n                        size=\"sm\"\r\n                        clickHandler={clickHandler}\r\n                        color=\"primary\"\r\n                    >\r\n                        Size sm\r\n                    </Button>\r\n                    <Button\r\n                        size=\"md\"\r\n                        clickHandler={clickHandler}\r\n                        color=\"primary\"\r\n                    >\r\n                        Size md\r\n                    </Button>\r\n                    <Button\r\n                        size=\"lg\"\r\n                        clickHandler={clickHandler}\r\n                        color=\"primary\"\r\n                    >\r\n                        Size lg\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Color:</div>\r\n                <div className=\"flexRow\">\r\n                    <Button color=\"default\" clickHandler={clickHandler}>\r\n                        Default\r\n                    </Button>\r\n                    <Button color=\"primary\" clickHandler={clickHandler}>\r\n                        Primary\r\n                    </Button>\r\n                    <Button color=\"secondary\" clickHandler={clickHandler}>\r\n                        Secondary\r\n                    </Button>\r\n                    <Button color=\"danger\" clickHandler={clickHandler}>\r\n                        Danger\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"btnType\">Error:</div>\r\n                <Button\r\n                    variant=\"tgfdext\"\r\n                    color=\"fds\"\r\n                    clickHandler={clickHandler}\r\n                >\r\n                    Text\r\n                </Button>\r\n            </div>\r\n            <Button color=\"danger\" clickHandler={alertPriya} size=\"lg\">\r\n                Priya la caca\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;\r\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":13},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"no-unused-vars","'Prism' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]